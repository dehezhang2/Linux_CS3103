Possible output of the program:

1. If the user call the executable file with more or less than 2 variables, the program will output and terminate:

        Usage: $ ./Filename max_token flow_interval(only accept 2 variables)

2. If the input variables are not numbers or zero, the program will output and terminate:

        Input error!

3. If the variables are correctly inputted, the main thread will print the header of the table
    
        Flow         Queue                                  Server
        Token added  Latest sequence number Current Length  Token served Total Token fetched


4. If there is something wrong when creating/joining thread or locking/unlocking the mutex, the program will output and terminate:
    
        Error when creating/joining the thread, error number: x
        Error when locking/unlocking the mutex, error number: x
   
   where x is the error number!

5. If there is something wrong when initializing, waiting, posting or destroying the semaphore, the program will output and terminate:

        Error when initializing/waiting/posting/destroying the semaphore!

6. If the 2 threads are started successfully, they will do the simulation and print

        aaa(flow/pflow)          bbb                    ccc            
                                                        zzz             xxx          yyy

   where aaa is random number generated by flow or pflow, bbb is the last sequence number, ccc and zzz is the current queue length,
   xxx is the token fetched in the current round, yyy is the total token fetched

7. When the addition of dropped token and fetched token is larger than max token, the simulation will be terminated and output

        The total number of tokens that have been fetched by the server is eee.
        The total number of tokens that have been generated by the flow is fff.
        The total number of tokens that have been generated by the pflow is ggg.
        The total number of tokens that have been dropped by the queue is hhh.


